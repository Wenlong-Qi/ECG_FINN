// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_0_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weights_m_weights_0_V_address0,
        weights_m_weights_0_V_ce0,
        weights_m_weights_0_V_q0,
        weights_m_weights_1_V_address0,
        weights_m_weights_1_V_ce0,
        weights_m_weights_1_V_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [71:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
output  [4:0] weights_m_weights_0_V_address0;
output   weights_m_weights_0_V_ce0;
input  [17:0] weights_m_weights_0_V_q0;
output  [4:0] weights_m_weights_1_V_address0;
output   weights_m_weights_1_V_ce0;
input  [17:0] weights_m_weights_1_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weights_m_weights_0_V_ce0;
reg weights_m_weights_1_V_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] threshs_m_thresholds_5_address0;
reg    threshs_m_thresholds_5_ce0;
wire   [7:0] threshs_m_thresholds_5_q0;
wire   [4:0] threshs_m_thresholds_4_address0;
reg    threshs_m_thresholds_4_ce0;
wire   [7:0] threshs_m_thresholds_4_q0;
wire   [4:0] threshs_m_thresholds_3_address0;
reg    threshs_m_thresholds_3_ce0;
wire   [9:0] threshs_m_thresholds_3_q0;
wire   [4:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [7:0] threshs_m_thresholds_2_q0;
wire   [4:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [7:0] threshs_m_thresholds_1_q0;
wire   [4:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [9:0] threshs_m_thresholds_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln122_fu_299_p2;
wire   [0:0] icmp_ln125_fu_314_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln137_reg_1355;
reg   [11:0] i_0_reg_273;
reg    ap_predicate_op27_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] i_fu_305_p2;
wire   [0:0] icmp_ln137_fu_331_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [63:0] zext_ln137_fu_337_p1;
wire   [63:0] zext_ln186_fu_368_p1;
reg   [12:0] accu_V_0_0_0_fu_132;
wire   [12:0] accu_0_0_V_fu_837_p2;
reg   [12:0] accu_V_0_1_0_fu_136;
wire   [12:0] accu_0_1_V_fu_1121_p2;
reg   [31:0] tile_assign_fu_140;
wire   [31:0] tile_fu_343_p2;
wire   [31:0] select_ln173_1_fu_398_p3;
reg   [31:0] sf_1_fu_144;
wire   [31:0] sf_fu_349_p2;
reg   [31:0] nf_assign_fu_148;
wire   [31:0] select_ln173_fu_390_p3;
reg   [71:0] inElem_V_fu_152;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] nf_fu_378_p2;
wire   [0:0] icmp_ln173_fu_384_p2;
wire  signed [1:0] wgt_M_instance_0_V_fu_439_p1;
wire   [7:0] trunc_ln647_fu_523_p1;
wire   [7:0] mul_ln1352_fu_535_p0;
wire   [9:0] zext_ln215_fu_531_p1;
wire  signed [9:0] mul_ln1352_fu_535_p2;
wire  signed [1:0] wgt_M_instance_1_V_fu_443_p4;
wire   [7:0] arg_V_read_assign_1_fu_545_p4;
wire   [7:0] mul_ln1352_1_fu_563_p0;
wire   [9:0] zext_ln215_1_fu_559_p1;
wire  signed [9:0] mul_ln1352_1_fu_563_p2;
wire  signed [1:0] wgt_M_instance_2_V_fu_453_p4;
wire   [7:0] arg_V_read_assign_2_fu_573_p4;
wire   [7:0] mul_ln1352_2_fu_591_p0;
wire   [9:0] zext_ln215_2_fu_587_p1;
wire  signed [9:0] mul_ln1352_2_fu_591_p2;
wire  signed [1:0] wgt_M_instance_3_V_fu_463_p4;
wire   [7:0] arg_V_read_assign_3_fu_601_p4;
wire   [7:0] mul_ln1352_3_fu_619_p0;
wire   [9:0] zext_ln215_3_fu_615_p1;
wire  signed [9:0] mul_ln1352_3_fu_619_p2;
wire  signed [1:0] wgt_M_instance_4_V_fu_473_p4;
wire   [7:0] arg_V_read_assign_4_fu_629_p4;
wire   [7:0] mul_ln1352_4_fu_647_p0;
wire   [9:0] zext_ln215_4_fu_643_p1;
wire  signed [9:0] mul_ln1352_4_fu_647_p2;
wire  signed [1:0] wgt_M_instance_5_V_fu_483_p4;
wire   [7:0] arg_V_read_assign_5_fu_657_p4;
wire   [7:0] mul_ln1352_5_fu_675_p0;
wire   [9:0] zext_ln215_5_fu_671_p1;
wire  signed [9:0] mul_ln1352_5_fu_675_p2;
wire  signed [1:0] p_Result_0_6_fu_493_p4;
wire   [7:0] arg_V_read_assign_6_fu_685_p4;
wire   [7:0] mul_ln1352_6_fu_703_p0;
wire   [9:0] zext_ln215_6_fu_699_p1;
wire  signed [9:0] mul_ln1352_6_fu_703_p2;
wire  signed [1:0] p_Result_0_7_fu_503_p4;
wire   [7:0] arg_V_read_assign_7_fu_713_p4;
wire   [7:0] mul_ln1352_7_fu_731_p0;
wire   [9:0] zext_ln215_7_fu_727_p1;
wire  signed [9:0] mul_ln1352_7_fu_731_p2;
wire  signed [1:0] p_Result_0_8_fu_513_p4;
wire   [7:0] arg_V_read_assign_8_fu_741_p4;
wire   [7:0] mul_ln1352_8_fu_759_p0;
wire   [9:0] zext_ln215_8_fu_755_p1;
wire  signed [9:0] mul_ln1352_8_fu_759_p2;
wire  signed [12:0] sext_ln700_fu_709_p1;
wire   [12:0] select_ln137_1_fu_432_p3;
wire  signed [10:0] sext_ln170_4_fu_653_p1;
wire  signed [10:0] sext_ln170_5_fu_681_p1;
wire   [10:0] add_ln700_1_fu_775_p2;
wire  signed [11:0] sext_ln170_6_fu_737_p1;
wire  signed [11:0] sext_ln700_2_fu_781_p1;
wire   [11:0] add_ln700_2_fu_785_p2;
wire   [12:0] add_ln700_fu_769_p2;
wire  signed [12:0] sext_ln700_3_fu_791_p1;
wire  signed [10:0] sext_ln170_fu_541_p1;
wire  signed [10:0] sext_ln170_3_fu_625_p1;
wire   [10:0] add_ln700_4_fu_801_p2;
wire  signed [10:0] sext_ln700_1_fu_765_p1;
wire  signed [10:0] sext_ln170_1_fu_569_p1;
wire   [10:0] add_ln700_5_fu_811_p2;
wire  signed [11:0] sext_ln170_2_fu_597_p1;
wire  signed [11:0] sext_ln700_5_fu_817_p1;
wire   [11:0] add_ln700_6_fu_821_p2;
wire  signed [12:0] sext_ln700_4_fu_807_p1;
wire  signed [12:0] sext_ln700_6_fu_827_p1;
wire   [12:0] add_ln700_3_fu_795_p2;
wire   [12:0] add_ln700_7_fu_831_p2;
wire  signed [1:0] wgt_M_instance_0_V_1_fu_843_p1;
wire   [7:0] mul_ln1352_9_fu_931_p0;
wire  signed [9:0] mul_ln1352_9_fu_931_p2;
wire  signed [1:0] wgt_M_instance_1_V_1_fu_847_p4;
wire   [7:0] mul_ln1352_10_fu_945_p0;
wire  signed [9:0] mul_ln1352_10_fu_945_p2;
wire  signed [1:0] wgt_M_instance_2_V_1_fu_857_p4;
wire   [7:0] mul_ln1352_11_fu_959_p0;
wire  signed [9:0] mul_ln1352_11_fu_959_p2;
wire  signed [1:0] wgt_M_instance_3_V_1_fu_867_p4;
wire   [7:0] mul_ln1352_12_fu_973_p0;
wire  signed [9:0] mul_ln1352_12_fu_973_p2;
wire  signed [1:0] wgt_M_instance_4_V_1_fu_877_p4;
wire   [7:0] mul_ln1352_13_fu_987_p0;
wire  signed [9:0] mul_ln1352_13_fu_987_p2;
wire  signed [1:0] wgt_M_instance_5_V_1_fu_887_p4;
wire   [7:0] mul_ln1352_14_fu_1001_p0;
wire  signed [9:0] mul_ln1352_14_fu_1001_p2;
wire  signed [1:0] p_Result_116_6_fu_897_p4;
wire   [7:0] mul_ln1352_15_fu_1015_p0;
wire  signed [9:0] mul_ln1352_15_fu_1015_p2;
wire  signed [1:0] p_Result_116_7_fu_907_p4;
wire   [7:0] mul_ln1352_16_fu_1029_p0;
wire  signed [9:0] mul_ln1352_16_fu_1029_p2;
wire  signed [1:0] p_Result_116_8_fu_917_p4;
wire   [7:0] mul_ln1352_17_fu_1043_p0;
wire  signed [9:0] mul_ln1352_17_fu_1043_p2;
wire  signed [12:0] sext_ln700_7_fu_1021_p1;
wire   [12:0] select_ln137_fu_425_p3;
wire  signed [10:0] sext_ln170_11_fu_993_p1;
wire  signed [10:0] sext_ln170_12_fu_1007_p1;
wire   [10:0] add_ln700_10_fu_1059_p2;
wire  signed [11:0] sext_ln170_13_fu_1035_p1;
wire  signed [11:0] sext_ln700_9_fu_1065_p1;
wire   [11:0] add_ln700_11_fu_1069_p2;
wire   [12:0] add_ln700_9_fu_1053_p2;
wire  signed [12:0] sext_ln700_10_fu_1075_p1;
wire  signed [10:0] sext_ln170_7_fu_937_p1;
wire  signed [10:0] sext_ln170_10_fu_979_p1;
wire   [10:0] add_ln700_13_fu_1085_p2;
wire  signed [10:0] sext_ln700_8_fu_1049_p1;
wire  signed [10:0] sext_ln170_8_fu_951_p1;
wire   [10:0] add_ln700_14_fu_1095_p2;
wire  signed [11:0] sext_ln170_9_fu_965_p1;
wire  signed [11:0] sext_ln700_12_fu_1101_p1;
wire   [11:0] add_ln700_15_fu_1105_p2;
wire  signed [12:0] sext_ln700_11_fu_1091_p1;
wire  signed [12:0] sext_ln700_13_fu_1111_p1;
wire   [12:0] add_ln700_12_fu_1079_p2;
wire   [12:0] add_ln700_16_fu_1115_p2;
wire   [12:0] zext_ln186_1_fu_1137_p1;
wire   [0:0] icmp_ln899_fu_1141_p2;
wire   [0:0] xor_ln899_fu_1147_p2;
wire  signed [8:0] sext_ln186_fu_1157_p1;
wire   [12:0] zext_ln186_2_fu_1161_p1;
wire   [0:0] icmp_ln899_1_fu_1165_p2;
wire   [0:0] xor_ln899_1_fu_1171_p2;
wire   [12:0] zext_ln186_3_fu_1181_p1;
wire   [0:0] icmp_ln899_2_fu_1185_p2;
wire   [0:0] xor_ln899_2_fu_1191_p2;
wire   [1:0] zext_ln700_1_fu_1177_p1;
wire   [1:0] zext_ln700_2_fu_1197_p1;
wire   [1:0] add_ln700_18_fu_1201_p2;
wire   [1:0] zext_ln700_fu_1153_p1;
wire   [12:0] zext_ln186_4_fu_1213_p1;
wire   [0:0] icmp_ln899_3_fu_1217_p2;
wire   [0:0] xor_ln899_3_fu_1223_p2;
wire  signed [8:0] sext_ln186_1_fu_1233_p1;
wire   [12:0] zext_ln186_5_fu_1237_p1;
wire   [0:0] icmp_ln899_4_fu_1241_p2;
wire   [0:0] xor_ln899_4_fu_1247_p2;
wire   [12:0] zext_ln186_6_fu_1257_p1;
wire   [0:0] icmp_ln899_5_fu_1261_p2;
wire   [0:0] xor_ln899_5_fu_1267_p2;
wire   [1:0] zext_ln700_4_fu_1253_p1;
wire   [1:0] zext_ln700_5_fu_1273_p1;
wire   [1:0] add_ln700_20_fu_1277_p2;
wire   [1:0] zext_ln700_3_fu_1229_p1;
wire   [1:0] add_ln700_21_fu_1283_p2;
wire   [1:0] add_ln700_19_fu_1207_p2;
wire   [3:0] tmp_V_fu_1289_p3;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

StreamingFCLayer_Batch_0_Matrix_Vector_Actbkb #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_5_address0),
    .ce0(threshs_m_thresholds_5_ce0),
    .q0(threshs_m_thresholds_5_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actcud #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_4_address0),
    .ce0(threshs_m_thresholds_4_ce0),
    .q0(threshs_m_thresholds_4_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActdEe #(
    .DataWidth( 10 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_3_address0),
    .ce0(threshs_m_thresholds_3_ce0),
    .q0(threshs_m_thresholds_3_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActeOg #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActfYi #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actg8j #(
    .DataWidth( 10 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U1(
    .din0(mul_ln1352_fu_535_p0),
    .din1(wgt_M_instance_0_V_fu_439_p1),
    .dout(mul_ln1352_fu_535_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U2(
    .din0(mul_ln1352_1_fu_563_p0),
    .din1(wgt_M_instance_1_V_fu_443_p4),
    .dout(mul_ln1352_1_fu_563_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U3(
    .din0(mul_ln1352_2_fu_591_p0),
    .din1(wgt_M_instance_2_V_fu_453_p4),
    .dout(mul_ln1352_2_fu_591_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U4(
    .din0(mul_ln1352_3_fu_619_p0),
    .din1(wgt_M_instance_3_V_fu_463_p4),
    .dout(mul_ln1352_3_fu_619_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U5(
    .din0(mul_ln1352_4_fu_647_p0),
    .din1(wgt_M_instance_4_V_fu_473_p4),
    .dout(mul_ln1352_4_fu_647_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U6(
    .din0(mul_ln1352_5_fu_675_p0),
    .din1(wgt_M_instance_5_V_fu_483_p4),
    .dout(mul_ln1352_5_fu_675_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U7(
    .din0(mul_ln1352_6_fu_703_p0),
    .din1(p_Result_0_6_fu_493_p4),
    .dout(mul_ln1352_6_fu_703_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U8(
    .din0(mul_ln1352_7_fu_731_p0),
    .din1(p_Result_0_7_fu_503_p4),
    .dout(mul_ln1352_7_fu_731_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U9(
    .din0(mul_ln1352_8_fu_759_p0),
    .din1(p_Result_0_8_fu_513_p4),
    .dout(mul_ln1352_8_fu_759_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U10(
    .din0(mul_ln1352_9_fu_931_p0),
    .din1(wgt_M_instance_0_V_1_fu_843_p1),
    .dout(mul_ln1352_9_fu_931_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U11(
    .din0(mul_ln1352_10_fu_945_p0),
    .din1(wgt_M_instance_1_V_1_fu_847_p4),
    .dout(mul_ln1352_10_fu_945_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U12(
    .din0(mul_ln1352_11_fu_959_p0),
    .din1(wgt_M_instance_2_V_1_fu_857_p4),
    .dout(mul_ln1352_11_fu_959_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U13(
    .din0(mul_ln1352_12_fu_973_p0),
    .din1(wgt_M_instance_3_V_1_fu_867_p4),
    .dout(mul_ln1352_12_fu_973_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U14(
    .din0(mul_ln1352_13_fu_987_p0),
    .din1(wgt_M_instance_4_V_1_fu_877_p4),
    .dout(mul_ln1352_13_fu_987_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U15(
    .din0(mul_ln1352_14_fu_1001_p0),
    .din1(wgt_M_instance_5_V_1_fu_887_p4),
    .dout(mul_ln1352_14_fu_1001_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U16(
    .din0(mul_ln1352_15_fu_1015_p0),
    .din1(p_Result_116_6_fu_897_p4),
    .dout(mul_ln1352_15_fu_1015_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U17(
    .din0(mul_ln1352_16_fu_1029_p0),
    .din1(p_Result_116_7_fu_907_p4),
    .dout(mul_ln1352_16_fu_1029_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
StreamingFCLayer_hbi_U18(
    .din0(mul_ln1352_17_fu_1043_p0),
    .din1(p_Result_116_8_fu_917_p4),
    .dout(mul_ln1352_17_fu_1043_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_273 <= i_fu_305_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_273 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_fu_331_p2 == 1'd1))) begin
        nf_assign_fu_148 <= select_ln173_fu_390_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_148 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_331_p2 == 1'd0) & (icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_1_fu_144 <= sf_fu_349_p2;
    end else if ((((icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_fu_331_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_144 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_fu_331_p2 == 1'd1))) begin
        tile_assign_fu_140 <= select_ln173_1_fu_398_p3;
    end else if (((icmp_ln137_fu_331_p2 == 1'd0) & (icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_140 <= tile_fu_343_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_140 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accu_V_0_0_0_fu_132 <= accu_0_0_V_fu_837_p2;
        accu_V_0_1_0_fu_136 <= accu_0_1_V_fu_1121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln137_reg_1355 <= icmp_ln137_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln125_fu_314_p2 == 1'd1))) begin
        inElem_V_fu_152 <= in_V_V_TDATA;
    end
end

always @ (*) begin
    if ((icmp_ln122_fu_299_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_299_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln125_fu_314_p2 == 1'd1))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op27_read_state2 == 1'b1))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_1355 == 1'd1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_reg_1355 == 1'd1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_3_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_4_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_5_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_m_weights_0_V_ce0 = 1'b1;
    end else begin
        weights_m_weights_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights_m_weights_1_V_ce0 = 1'b1;
    end else begin
        weights_m_weights_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln122_fu_299_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln122_fu_299_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_837_p2 = (add_ln700_3_fu_795_p2 + add_ln700_7_fu_831_p2);

assign accu_0_1_V_fu_1121_p2 = (add_ln700_12_fu_1079_p2 + add_ln700_16_fu_1115_p2);

assign add_ln700_10_fu_1059_p2 = ($signed(sext_ln170_11_fu_993_p1) + $signed(sext_ln170_12_fu_1007_p1));

assign add_ln700_11_fu_1069_p2 = ($signed(sext_ln170_13_fu_1035_p1) + $signed(sext_ln700_9_fu_1065_p1));

assign add_ln700_12_fu_1079_p2 = ($signed(add_ln700_9_fu_1053_p2) + $signed(sext_ln700_10_fu_1075_p1));

assign add_ln700_13_fu_1085_p2 = ($signed(sext_ln170_7_fu_937_p1) + $signed(sext_ln170_10_fu_979_p1));

assign add_ln700_14_fu_1095_p2 = ($signed(sext_ln700_8_fu_1049_p1) + $signed(sext_ln170_8_fu_951_p1));

assign add_ln700_15_fu_1105_p2 = ($signed(sext_ln170_9_fu_965_p1) + $signed(sext_ln700_12_fu_1101_p1));

assign add_ln700_16_fu_1115_p2 = ($signed(sext_ln700_11_fu_1091_p1) + $signed(sext_ln700_13_fu_1111_p1));

assign add_ln700_18_fu_1201_p2 = (zext_ln700_1_fu_1177_p1 + zext_ln700_2_fu_1197_p1);

assign add_ln700_19_fu_1207_p2 = (add_ln700_18_fu_1201_p2 + zext_ln700_fu_1153_p1);

assign add_ln700_1_fu_775_p2 = ($signed(sext_ln170_4_fu_653_p1) + $signed(sext_ln170_5_fu_681_p1));

assign add_ln700_20_fu_1277_p2 = (zext_ln700_4_fu_1253_p1 + zext_ln700_5_fu_1273_p1);

assign add_ln700_21_fu_1283_p2 = (add_ln700_20_fu_1277_p2 + zext_ln700_3_fu_1229_p1);

assign add_ln700_2_fu_785_p2 = ($signed(sext_ln170_6_fu_737_p1) + $signed(sext_ln700_2_fu_781_p1));

assign add_ln700_3_fu_795_p2 = ($signed(add_ln700_fu_769_p2) + $signed(sext_ln700_3_fu_791_p1));

assign add_ln700_4_fu_801_p2 = ($signed(sext_ln170_fu_541_p1) + $signed(sext_ln170_3_fu_625_p1));

assign add_ln700_5_fu_811_p2 = ($signed(sext_ln700_1_fu_765_p1) + $signed(sext_ln170_1_fu_569_p1));

assign add_ln700_6_fu_821_p2 = ($signed(sext_ln170_2_fu_597_p1) + $signed(sext_ln700_5_fu_817_p1));

assign add_ln700_7_fu_831_p2 = ($signed(sext_ln700_4_fu_807_p1) + $signed(sext_ln700_6_fu_827_p1));

assign add_ln700_9_fu_1053_p2 = ($signed(sext_ln700_7_fu_1021_p1) + $signed(select_ln137_fu_425_p3));

assign add_ln700_fu_769_p2 = ($signed(sext_ln700_fu_709_p1) + $signed(select_ln137_1_fu_432_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op27_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op27_read_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((in_V_V_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op27_read_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((in_V_V_TVALID == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_io = ((out_V_V_TREADY == 1'b0) & (icmp_ln137_reg_1355 == 1'd1));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op27_read_state2 = ((icmp_ln122_fu_299_p2 == 1'd0) & (icmp_ln125_fu_314_p2 == 1'd1));
end

assign arg_V_read_assign_1_fu_545_p4 = {{inElem_V_fu_152[15:8]}};

assign arg_V_read_assign_2_fu_573_p4 = {{inElem_V_fu_152[23:16]}};

assign arg_V_read_assign_3_fu_601_p4 = {{inElem_V_fu_152[31:24]}};

assign arg_V_read_assign_4_fu_629_p4 = {{inElem_V_fu_152[39:32]}};

assign arg_V_read_assign_5_fu_657_p4 = {{inElem_V_fu_152[47:40]}};

assign arg_V_read_assign_6_fu_685_p4 = {{inElem_V_fu_152[55:48]}};

assign arg_V_read_assign_7_fu_713_p4 = {{inElem_V_fu_152[63:56]}};

assign arg_V_read_assign_8_fu_741_p4 = {{inElem_V_fu_152[71:64]}};

assign i_fu_305_p2 = (i_0_reg_273 + 12'd1);

assign icmp_ln122_fu_299_p2 = ((i_0_reg_273 == 12'd3200) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_314_p2 = ((nf_assign_fu_148 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_331_p2 = ((sf_1_fu_144 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_384_p2 = ((nf_fu_378_p2 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1165_p2 = (($signed(accu_0_0_V_fu_837_p2) < $signed(zext_ln186_2_fu_1161_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1185_p2 = (($signed(accu_0_0_V_fu_837_p2) < $signed(zext_ln186_3_fu_1181_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_3_fu_1217_p2 = (($signed(accu_0_1_V_fu_1121_p2) < $signed(zext_ln186_4_fu_1213_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_4_fu_1241_p2 = (($signed(accu_0_1_V_fu_1121_p2) < $signed(zext_ln186_5_fu_1237_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_5_fu_1261_p2 = (($signed(accu_0_1_V_fu_1121_p2) < $signed(zext_ln186_6_fu_1257_p1)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1141_p2 = (($signed(accu_0_0_V_fu_837_p2) < $signed(zext_ln186_1_fu_1137_p1)) ? 1'b1 : 1'b0);

assign mul_ln1352_10_fu_945_p0 = zext_ln215_1_fu_559_p1;

assign mul_ln1352_11_fu_959_p0 = zext_ln215_2_fu_587_p1;

assign mul_ln1352_12_fu_973_p0 = zext_ln215_3_fu_615_p1;

assign mul_ln1352_13_fu_987_p0 = zext_ln215_4_fu_643_p1;

assign mul_ln1352_14_fu_1001_p0 = zext_ln215_5_fu_671_p1;

assign mul_ln1352_15_fu_1015_p0 = zext_ln215_6_fu_699_p1;

assign mul_ln1352_16_fu_1029_p0 = zext_ln215_7_fu_727_p1;

assign mul_ln1352_17_fu_1043_p0 = zext_ln215_8_fu_755_p1;

assign mul_ln1352_1_fu_563_p0 = zext_ln215_1_fu_559_p1;

assign mul_ln1352_2_fu_591_p0 = zext_ln215_2_fu_587_p1;

assign mul_ln1352_3_fu_619_p0 = zext_ln215_3_fu_615_p1;

assign mul_ln1352_4_fu_647_p0 = zext_ln215_4_fu_643_p1;

assign mul_ln1352_5_fu_675_p0 = zext_ln215_5_fu_671_p1;

assign mul_ln1352_6_fu_703_p0 = zext_ln215_6_fu_699_p1;

assign mul_ln1352_7_fu_731_p0 = zext_ln215_7_fu_727_p1;

assign mul_ln1352_8_fu_759_p0 = zext_ln215_8_fu_755_p1;

assign mul_ln1352_9_fu_931_p0 = zext_ln215_fu_531_p1;

assign mul_ln1352_fu_535_p0 = zext_ln215_fu_531_p1;

assign nf_fu_378_p2 = (nf_assign_fu_148 + 32'd1);

assign out_V_V_TDATA = tmp_V_fu_1289_p3;

assign p_Result_0_6_fu_493_p4 = {{weights_m_weights_0_V_q0[13:12]}};

assign p_Result_0_7_fu_503_p4 = {{weights_m_weights_0_V_q0[15:14]}};

assign p_Result_0_8_fu_513_p4 = {{weights_m_weights_0_V_q0[17:16]}};

assign p_Result_116_6_fu_897_p4 = {{weights_m_weights_1_V_q0[13:12]}};

assign p_Result_116_7_fu_907_p4 = {{weights_m_weights_1_V_q0[15:14]}};

assign p_Result_116_8_fu_917_p4 = {{weights_m_weights_1_V_q0[17:16]}};

assign select_ln137_1_fu_432_p3 = ((icmp_ln137_reg_1355[0:0] === 1'b1) ? 13'd0 : accu_V_0_0_0_fu_132);

assign select_ln137_fu_425_p3 = ((icmp_ln137_reg_1355[0:0] === 1'b1) ? 13'd0 : accu_V_0_1_0_fu_136);

assign select_ln173_1_fu_398_p3 = ((icmp_ln173_fu_384_p2[0:0] === 1'b1) ? 32'd0 : tile_fu_343_p2);

assign select_ln173_fu_390_p3 = ((icmp_ln173_fu_384_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_378_p2);

assign sext_ln170_10_fu_979_p1 = mul_ln1352_12_fu_973_p2;

assign sext_ln170_11_fu_993_p1 = mul_ln1352_13_fu_987_p2;

assign sext_ln170_12_fu_1007_p1 = mul_ln1352_14_fu_1001_p2;

assign sext_ln170_13_fu_1035_p1 = mul_ln1352_16_fu_1029_p2;

assign sext_ln170_1_fu_569_p1 = mul_ln1352_1_fu_563_p2;

assign sext_ln170_2_fu_597_p1 = mul_ln1352_2_fu_591_p2;

assign sext_ln170_3_fu_625_p1 = mul_ln1352_3_fu_619_p2;

assign sext_ln170_4_fu_653_p1 = mul_ln1352_4_fu_647_p2;

assign sext_ln170_5_fu_681_p1 = mul_ln1352_5_fu_675_p2;

assign sext_ln170_6_fu_737_p1 = mul_ln1352_7_fu_731_p2;

assign sext_ln170_7_fu_937_p1 = mul_ln1352_9_fu_931_p2;

assign sext_ln170_8_fu_951_p1 = mul_ln1352_10_fu_945_p2;

assign sext_ln170_9_fu_965_p1 = mul_ln1352_11_fu_959_p2;

assign sext_ln170_fu_541_p1 = mul_ln1352_fu_535_p2;

assign sext_ln186_1_fu_1233_p1 = $signed(threshs_m_thresholds_1_q0);

assign sext_ln186_fu_1157_p1 = $signed(threshs_m_thresholds_4_q0);

assign sext_ln700_10_fu_1075_p1 = $signed(add_ln700_11_fu_1069_p2);

assign sext_ln700_11_fu_1091_p1 = $signed(add_ln700_13_fu_1085_p2);

assign sext_ln700_12_fu_1101_p1 = $signed(add_ln700_14_fu_1095_p2);

assign sext_ln700_13_fu_1111_p1 = $signed(add_ln700_15_fu_1105_p2);

assign sext_ln700_1_fu_765_p1 = mul_ln1352_8_fu_759_p2;

assign sext_ln700_2_fu_781_p1 = $signed(add_ln700_1_fu_775_p2);

assign sext_ln700_3_fu_791_p1 = $signed(add_ln700_2_fu_785_p2);

assign sext_ln700_4_fu_807_p1 = $signed(add_ln700_4_fu_801_p2);

assign sext_ln700_5_fu_817_p1 = $signed(add_ln700_5_fu_811_p2);

assign sext_ln700_6_fu_827_p1 = $signed(add_ln700_6_fu_821_p2);

assign sext_ln700_7_fu_1021_p1 = mul_ln1352_15_fu_1015_p2;

assign sext_ln700_8_fu_1049_p1 = mul_ln1352_17_fu_1043_p2;

assign sext_ln700_9_fu_1065_p1 = $signed(add_ln700_10_fu_1059_p2);

assign sext_ln700_fu_709_p1 = mul_ln1352_6_fu_703_p2;

assign sf_fu_349_p2 = (32'd1 + sf_1_fu_144);

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_368_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_368_p1;

assign threshs_m_thresholds_3_address0 = zext_ln186_fu_368_p1;

assign threshs_m_thresholds_4_address0 = zext_ln186_fu_368_p1;

assign threshs_m_thresholds_5_address0 = zext_ln186_fu_368_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_368_p1;

assign tile_fu_343_p2 = (32'd1 + tile_assign_fu_140);

assign tmp_V_fu_1289_p3 = {{add_ln700_21_fu_1283_p2}, {add_ln700_19_fu_1207_p2}};

assign trunc_ln647_fu_523_p1 = inElem_V_fu_152[7:0];

assign weights_m_weights_0_V_address0 = zext_ln137_fu_337_p1;

assign weights_m_weights_1_V_address0 = zext_ln137_fu_337_p1;

assign wgt_M_instance_0_V_1_fu_843_p1 = weights_m_weights_1_V_q0[1:0];

assign wgt_M_instance_0_V_fu_439_p1 = weights_m_weights_0_V_q0[1:0];

assign wgt_M_instance_1_V_1_fu_847_p4 = {{weights_m_weights_1_V_q0[3:2]}};

assign wgt_M_instance_1_V_fu_443_p4 = {{weights_m_weights_0_V_q0[3:2]}};

assign wgt_M_instance_2_V_1_fu_857_p4 = {{weights_m_weights_1_V_q0[5:4]}};

assign wgt_M_instance_2_V_fu_453_p4 = {{weights_m_weights_0_V_q0[5:4]}};

assign wgt_M_instance_3_V_1_fu_867_p4 = {{weights_m_weights_1_V_q0[7:6]}};

assign wgt_M_instance_3_V_fu_463_p4 = {{weights_m_weights_0_V_q0[7:6]}};

assign wgt_M_instance_4_V_1_fu_877_p4 = {{weights_m_weights_1_V_q0[9:8]}};

assign wgt_M_instance_4_V_fu_473_p4 = {{weights_m_weights_0_V_q0[9:8]}};

assign wgt_M_instance_5_V_1_fu_887_p4 = {{weights_m_weights_1_V_q0[11:10]}};

assign wgt_M_instance_5_V_fu_483_p4 = {{weights_m_weights_0_V_q0[11:10]}};

assign xor_ln899_1_fu_1171_p2 = (icmp_ln899_1_fu_1165_p2 ^ 1'd1);

assign xor_ln899_2_fu_1191_p2 = (icmp_ln899_2_fu_1185_p2 ^ 1'd1);

assign xor_ln899_3_fu_1223_p2 = (icmp_ln899_3_fu_1217_p2 ^ 1'd1);

assign xor_ln899_4_fu_1247_p2 = (icmp_ln899_4_fu_1241_p2 ^ 1'd1);

assign xor_ln899_5_fu_1267_p2 = (icmp_ln899_5_fu_1261_p2 ^ 1'd1);

assign xor_ln899_fu_1147_p2 = (icmp_ln899_fu_1141_p2 ^ 1'd1);

assign zext_ln137_fu_337_p1 = tile_assign_fu_140;

assign zext_ln186_1_fu_1137_p1 = threshs_m_thresholds_5_q0;

assign zext_ln186_2_fu_1161_p1 = $unsigned(sext_ln186_fu_1157_p1);

assign zext_ln186_3_fu_1181_p1 = threshs_m_thresholds_3_q0;

assign zext_ln186_4_fu_1213_p1 = threshs_m_thresholds_2_q0;

assign zext_ln186_5_fu_1237_p1 = $unsigned(sext_ln186_1_fu_1233_p1);

assign zext_ln186_6_fu_1257_p1 = threshs_m_thresholds_q0;

assign zext_ln186_fu_368_p1 = nf_assign_fu_148;

assign zext_ln215_1_fu_559_p1 = arg_V_read_assign_1_fu_545_p4;

assign zext_ln215_2_fu_587_p1 = arg_V_read_assign_2_fu_573_p4;

assign zext_ln215_3_fu_615_p1 = arg_V_read_assign_3_fu_601_p4;

assign zext_ln215_4_fu_643_p1 = arg_V_read_assign_4_fu_629_p4;

assign zext_ln215_5_fu_671_p1 = arg_V_read_assign_5_fu_657_p4;

assign zext_ln215_6_fu_699_p1 = arg_V_read_assign_6_fu_685_p4;

assign zext_ln215_7_fu_727_p1 = arg_V_read_assign_7_fu_713_p4;

assign zext_ln215_8_fu_755_p1 = arg_V_read_assign_8_fu_741_p4;

assign zext_ln215_fu_531_p1 = trunc_ln647_fu_523_p1;

assign zext_ln700_1_fu_1177_p1 = xor_ln899_1_fu_1171_p2;

assign zext_ln700_2_fu_1197_p1 = xor_ln899_2_fu_1191_p2;

assign zext_ln700_3_fu_1229_p1 = xor_ln899_3_fu_1223_p2;

assign zext_ln700_4_fu_1253_p1 = xor_ln899_4_fu_1247_p2;

assign zext_ln700_5_fu_1273_p1 = xor_ln899_5_fu_1267_p2;

assign zext_ln700_fu_1153_p1 = xor_ln899_fu_1147_p2;

endmodule //StreamingFCLayer_Batch_0_Matrix_Vector_Activa
